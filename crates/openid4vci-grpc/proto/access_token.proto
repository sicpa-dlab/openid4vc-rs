syntax = "proto3";

import "error.proto";

package openid4vci;

service AccessTokenService {
  rpc CreateAccessTokenErrorResponse(CreateAccessTokenErrorResponseRequest)
      returns (CreateAccessTokenErrorResponseResponse);
  rpc CreateAccessTokenSuccessResponse(CreateAccessTokenSuccessResponseRequest)
      returns (CreateAccessTokenSuccessResponseResponse);
  rpc EvaluateAccessTokenRequest(EvaluateAccessTokenRequestRequest)
      returns (EvaluateAccessTokenRequestResponse);
}

message CreateAccessTokenErrorResponseRequest {
  string error = 1;
  optional string error_description = 2;
  optional string error_uri = 3;
  optional bytes error_additional_details = 4;
}

message CreateAccessTokenErrorResponseResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    bytes error_response = 1;
  }
}

message CreateAccessTokenSuccessResponseRequest {
  string access_token = 1;
  string token_type = 2;
  optional uint64 expires_in = 3;
  optional string scope = 4;
  optional string c_nonce = 5;
  optional uint64 c_nonce_expires_in = 6;
  optional bool authorization_pending = 7;
  optional uint64 interval = 8;
}

message CreateAccessTokenSuccessResponseResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    bytes success_response = 1;
  }
}

message EvaluateAccessTokenRequestRequest {
  bytes access_token_request = 1;
  optional bytes credential_offer = 2;
  optional bytes evaluate_access_token_request_options = 3;
}

message EvaluateAccessTokenRequestResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    bytes success_response = 1;
  }
}
