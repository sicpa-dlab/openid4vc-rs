syntax = "proto3";

package openid4vci;

import "types.proto";

// Struct mapping the `credential_request` as defined in section 7.2 of the openid4vci specification
message CredentialRequest {
  // Format of the Credential to be issued. This Credential format identifier determines further
  // parameters required to determine the type and (optionally) the content of the credential to
  // be issued. Credential Format Profiles consisting of the Credential format specific set of
  // parameters are defined in Appendix E of the openid4vci specification.
  bytes format = 1;

  // JSON object containing proof of possession of the key material the issued Credential shall
  // be bound to. The specification envisions use of different types of proofs for different
  // cryptographic schemes. The proof object MUST contain a proof_type claim of type JSON string
  // denoting the concrete proof type. This type determines the further claims in the proof
  // object and its respective processing rules. Proof types are defined in Section 7.2.1 of the
  // openid4vci specification.
  CredentialRequestProof proof = 2;
}

// Struct mapping of `proof types` as defined in section 7.2.1 of the openid4vci specification
message CredentialRequestProof {
  // Type of proof used. MUST be of string `jwt`.
  string proof_type = 1;

  // Objects of this type contain a single jwt element with a JWS
  // [RFC7515](https://www.rfc-editor.org/rfc/rfc7515.txt) as proof of possession.
  string jwt = 2;
}