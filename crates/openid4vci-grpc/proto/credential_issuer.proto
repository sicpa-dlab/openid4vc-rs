syntax = "proto3";

import "error.proto";

package openid4vci;

service CredentialIssuerService {
  rpc CreateCredentialOffer(CreateCredentialOfferRequest)
      returns (CreateCredentialOfferResponse);
  rpc EvaluateCredentialRequest(EvaluateCredentialRequestRequest)
      returns (EvaluateCredentialRequestResponse);
  rpc PreEvaluateCredentialRequest(PreEvaluateCredentialRequestRequest)
      returns (PreEvaluateCredentialRequestResponse);
  rpc CreateCredentialErrorResponse(CreateCredentialErrorResponseRequest)
      returns (CreateCredentialErrorResponseResponse);
  rpc CreateCredentialSuccessResponse(CreateCredentialSuccessResponseRequest)
      returns (CreateCredentialSuccessResponseResponse);
}

message CreateCredentialOfferRequest {
  bytes issuer_metadata = 1;
  bytes credentials = 2;
  optional string credential_offer_endpoint = 3;
  optional bytes authorized_code_flow = 4;
  optional bytes pre_authorized_code_flow = 5;
}

message CreateCredentialOfferResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    bytes credential_offer = 1;
    string credential_offer_url = 2;
  }
}

message PreEvaluateCredentialRequestRequest {
  bytes credential_request = 1;
}

message PreEvaluateCredentialRequestResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    optional string did = 1;
  }
}

message EvaluateCredentialRequestRequest {
  bytes issuer_metadata = 1;
  bytes credential_request = 2;
  optional bytes credential_offer = 3;
  optional bytes authorization_server_metadata = 4;
  optional bytes did_document = 5;
}

message EvaluateCredentialRequestResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    optional bytes proof_of_possession = 1;
  }
}

message CreateCredentialSuccessResponseRequest {
  bytes credential_request = 1;
  optional bytes credential = 2;
  optional string acceptance_token = 3;
  optional string c_nonce = 4;
  optional uint64 c_nonce_expires_in = 5;
}

message CreateCredentialSuccessResponseResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    bytes success_response = 1;
  }
}

message CreateCredentialErrorResponseRequest {
  string error = 1;
  optional string error_description = 2;
  optional string error_uri = 3;
  optional bytes error_additional_details = 4;
}

message CreateCredentialErrorResponseResponse {
  oneof response {
    Success success = 1;
    Error error = 2;
  }

  message Success {
    bytes error_response = 1;
  }
}
